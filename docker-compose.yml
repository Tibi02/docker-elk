version: '3.5'

services:

  elasticsearch:
    restart: always
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - "./elasticsearch/data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      cluster.name: oktibor
      node.name: oktibor-paris
      VIRTUAL_HOST: "es.oktibor.com"
      VIRTUAL_PORT: "9200"
    networks:
      - elk
      - nginx

  logstash:
    restart: always
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    restart: always
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    environment:
      VIRTUAL_HOST: "kibana.oktibor.com"
    networks:
      - nginx
      - elk
    depends_on:
      - elasticsearch

  logspout:
    restart: on-failure
    build:
      context: logspout
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      ROUTE_URIS: logstash://logstash:5000
      LOGSTASH_TAGS: docker-elk
    depends_on:
      - logstash
    networks:
      - elk

networks:
  nginx:
   external: true
  elk:
    name: elk
    driver: bridge